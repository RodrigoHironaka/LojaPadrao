<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btEmpresa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cEoJh2z6aLgAAAAASUVORK5CYII=
</value>
  </data>
</root>